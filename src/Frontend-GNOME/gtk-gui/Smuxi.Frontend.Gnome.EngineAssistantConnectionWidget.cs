// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Smuxi.Frontend.Gnome {
    
    
    public partial class EngineAssistantConnectionWidget {
        
        private Gtk.VBox vbox2;
        
        private Gtk.VBox vbox4;
        
        private Gtk.CheckButton f_UseSshTunnelCheckButton;
        
        private Gtk.Label label6;
        
        private Gtk.Table table1;
        
        private Gtk.Entry f_HostEntry;
        
        private Gtk.SpinButton f_PortSpinButton;
        
        private Gtk.Entry f_SshHostEntry;
        
        private Gtk.SpinButton f_SshPortSpinButton;
        
        private Gtk.Label label1;
        
        private Gtk.Label label10;
        
        private Gtk.Label label11;
        
        private Gtk.Label label5;
        
        private Gtk.Label label7;
        
        private Gtk.Label label9;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget Smuxi.Frontend.Gnome.EngineAssistantConnectionWidget
            Stetic.BinContainer.Attach(this);
            this.Name = "Smuxi.Frontend.Gnome.EngineAssistantConnectionWidget";
            // Container child Smuxi.Frontend.Gnome.EngineAssistantConnectionWidget.Gtk.Container+ContainerChild
            this.vbox2 = new Gtk.VBox();
            this.vbox2.Name = "vbox2";
            this.vbox2.Spacing = 10;
            this.vbox2.BorderWidth = ((uint)(5));
            // Container child vbox2.Gtk.Box+BoxChild
            this.vbox4 = new Gtk.VBox();
            this.vbox4.Name = "vbox4";
            this.vbox4.Spacing = 6;
            // Container child vbox4.Gtk.Box+BoxChild
            this.f_UseSshTunnelCheckButton = new Gtk.CheckButton();
            this.f_UseSshTunnelCheckButton.CanFocus = true;
            this.f_UseSshTunnelCheckButton.Name = "f_UseSshTunnelCheckButton";
            this.f_UseSshTunnelCheckButton.Label = Mono.Unix.Catalog.GetString("Use _SSH tunnel");
            this.f_UseSshTunnelCheckButton.Active = true;
            this.f_UseSshTunnelCheckButton.DrawIndicator = true;
            this.f_UseSshTunnelCheckButton.UseUnderline = true;
            this.vbox4.Add(this.f_UseSshTunnelCheckButton);
            Gtk.Box.BoxChild w1 = ((Gtk.Box.BoxChild)(this.vbox4[this.f_UseSshTunnelCheckButton]));
            w1.Position = 0;
            w1.Expand = false;
            w1.Fill = false;
            // Container child vbox4.Gtk.Box+BoxChild
            this.label6 = new Gtk.Label();
            this.label6.Name = "label6";
            this.label6.Xpad = 50;
            this.label6.Xalign = 0F;
            this.label6.LabelProp = Mono.Unix.Catalog.GetString("<span size=\"small\">Enables the use of SSH for the connection.  This has a small performance impact, but is more secure and required when using NAT or port-based firewalls</span>");
            this.label6.UseMarkup = true;
            this.label6.Wrap = true;
            this.vbox4.Add(this.label6);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox4[this.label6]));
            w2.Position = 1;
            w2.Expand = false;
            w2.Fill = false;
            this.vbox2.Add(this.vbox4);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox2[this.vbox4]));
            w3.Position = 0;
            w3.Expand = false;
            w3.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            this.table1 = new Gtk.Table(((uint)(4)), ((uint)(4)), false);
            this.table1.Name = "table1";
            this.table1.RowSpacing = ((uint)(5));
            this.table1.ColumnSpacing = ((uint)(6));
            // Container child table1.Gtk.Table+TableChild
            this.f_HostEntry = new Gtk.Entry();
            this.f_HostEntry.Sensitive = false;
            this.f_HostEntry.CanFocus = true;
            this.f_HostEntry.Name = "f_HostEntry";
            this.f_HostEntry.Text = Mono.Unix.Catalog.GetString("localhost");
            this.f_HostEntry.IsEditable = true;
            this.f_HostEntry.InvisibleChar = '●';
            this.table1.Add(this.f_HostEntry);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table1[this.f_HostEntry]));
            w4.TopAttach = ((uint)(2));
            w4.BottomAttach = ((uint)(3));
            w4.LeftAttach = ((uint)(1));
            w4.RightAttach = ((uint)(2));
            w4.XOptions = ((Gtk.AttachOptions)(4));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.f_PortSpinButton = new Gtk.SpinButton(1, 65535, 1);
            this.f_PortSpinButton.CanFocus = true;
            this.f_PortSpinButton.Name = "f_PortSpinButton";
            this.f_PortSpinButton.Adjustment.PageIncrement = 1;
            this.f_PortSpinButton.ClimbRate = 1;
            this.f_PortSpinButton.Numeric = true;
            this.f_PortSpinButton.Value = 7689;
            this.table1.Add(this.f_PortSpinButton);
            Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(this.table1[this.f_PortSpinButton]));
            w5.TopAttach = ((uint)(2));
            w5.BottomAttach = ((uint)(3));
            w5.LeftAttach = ((uint)(3));
            w5.RightAttach = ((uint)(4));
            w5.XOptions = ((Gtk.AttachOptions)(4));
            w5.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.f_SshHostEntry = new Gtk.Entry();
            this.f_SshHostEntry.CanFocus = true;
            this.f_SshHostEntry.Name = "f_SshHostEntry";
            this.f_SshHostEntry.IsEditable = true;
            this.f_SshHostEntry.InvisibleChar = '●';
            this.table1.Add(this.f_SshHostEntry);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.table1[this.f_SshHostEntry]));
            w6.LeftAttach = ((uint)(1));
            w6.RightAttach = ((uint)(2));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.f_SshPortSpinButton = new Gtk.SpinButton(1, 65535, 1);
            this.f_SshPortSpinButton.CanFocus = true;
            this.f_SshPortSpinButton.Name = "f_SshPortSpinButton";
            this.f_SshPortSpinButton.Adjustment.PageIncrement = 1;
            this.f_SshPortSpinButton.ClimbRate = 1;
            this.f_SshPortSpinButton.Numeric = true;
            this.f_SshPortSpinButton.Value = 22;
            this.table1.Add(this.f_SshPortSpinButton);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table1[this.f_SshPortSpinButton]));
            w7.LeftAttach = ((uint)(3));
            w7.RightAttach = ((uint)(4));
            w7.XOptions = ((Gtk.AttachOptions)(4));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label1 = new Gtk.Label();
            this.label1.Name = "label1";
            this.label1.Xalign = 0F;
            this.label1.LabelProp = Mono.Unix.Catalog.GetString("SSH _Host:");
            this.label1.UseUnderline = true;
            this.table1.Add(this.label1);
            Gtk.Table.TableChild w8 = ((Gtk.Table.TableChild)(this.table1[this.label1]));
            w8.XOptions = ((Gtk.AttachOptions)(4));
            w8.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label10 = new Gtk.Label();
            this.label10.Name = "label10";
            this.label10.Xpad = 50;
            this.label10.Xalign = 0F;
            this.label10.LabelProp = Mono.Unix.Catalog.GetString("<span size=\"small\">DNS or IP address and port of the SSH server</span>");
            this.label10.UseMarkup = true;
            this.table1.Add(this.label10);
            Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(this.table1[this.label10]));
            w9.TopAttach = ((uint)(1));
            w9.BottomAttach = ((uint)(2));
            w9.RightAttach = ((uint)(4));
            w9.XOptions = ((Gtk.AttachOptions)(4));
            w9.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label11 = new Gtk.Label();
            this.label11.Name = "label11";
            this.label11.Xalign = 0F;
            this.label11.LabelProp = Mono.Unix.Catalog.GetString("_Port:");
            this.label11.UseUnderline = true;
            this.table1.Add(this.label11);
            Gtk.Table.TableChild w10 = ((Gtk.Table.TableChild)(this.table1[this.label11]));
            w10.TopAttach = ((uint)(2));
            w10.BottomAttach = ((uint)(3));
            w10.LeftAttach = ((uint)(2));
            w10.RightAttach = ((uint)(3));
            w10.XOptions = ((Gtk.AttachOptions)(4));
            w10.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label5 = new Gtk.Label();
            this.label5.Name = "label5";
            this.label5.Xalign = 0F;
            this.label5.LabelProp = Mono.Unix.Catalog.GetString("_Port:");
            this.label5.UseUnderline = true;
            this.table1.Add(this.label5);
            Gtk.Table.TableChild w11 = ((Gtk.Table.TableChild)(this.table1[this.label5]));
            w11.LeftAttach = ((uint)(2));
            w11.RightAttach = ((uint)(3));
            w11.XOptions = ((Gtk.AttachOptions)(4));
            w11.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label7 = new Gtk.Label();
            this.label7.Name = "label7";
            this.label7.Xpad = 50;
            this.label7.Xalign = 0F;
            this.label7.LabelProp = Mono.Unix.Catalog.GetString("<span size=\"small\">DNS or IP address and port of the Smuxi server</span>");
            this.label7.UseMarkup = true;
            this.table1.Add(this.label7);
            Gtk.Table.TableChild w12 = ((Gtk.Table.TableChild)(this.table1[this.label7]));
            w12.TopAttach = ((uint)(3));
            w12.BottomAttach = ((uint)(4));
            w12.RightAttach = ((uint)(4));
            w12.XOptions = ((Gtk.AttachOptions)(4));
            w12.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            this.label9 = new Gtk.Label();
            this.label9.Name = "label9";
            this.label9.Xalign = 0F;
            this.label9.LabelProp = Mono.Unix.Catalog.GetString("_Smuxi Host:");
            this.label9.UseUnderline = true;
            this.table1.Add(this.label9);
            Gtk.Table.TableChild w13 = ((Gtk.Table.TableChild)(this.table1[this.label9]));
            w13.TopAttach = ((uint)(2));
            w13.BottomAttach = ((uint)(3));
            w13.XOptions = ((Gtk.AttachOptions)(4));
            w13.YOptions = ((Gtk.AttachOptions)(4));
            this.vbox2.Add(this.table1);
            Gtk.Box.BoxChild w14 = ((Gtk.Box.BoxChild)(this.vbox2[this.table1]));
            w14.Position = 1;
            w14.Expand = false;
            w14.Fill = false;
            this.Add(this.vbox2);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.label1.MnemonicWidget = this.f_SshHostEntry;
            this.label11.MnemonicWidget = this.f_PortSpinButton;
            this.label5.MnemonicWidget = this.f_SshPortSpinButton;
            this.label9.MnemonicWidget = this.f_HostEntry;
            this.Hide();
        }
    }
}
